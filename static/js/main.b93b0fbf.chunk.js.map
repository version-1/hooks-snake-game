{"version":3,"sources":["components/Field.js","components/Navigation.js","components/StartButton.js","components/MoveButton.js","App.js","serviceWorker.js","index.js"],"names":["Dot","props","className","value","Field","fields","map","row","rowindex","col","colIndex","key","Navigation","state","canUp","canDown","onChangeDifficulty","length","difficulty","upVisiblity","downVisibilty","onClick","StatusText","init","playing","gameover","suspended","StartButton","status","onStart","onStop","onRestart","tabIndex","MoveButton","handleChangeDirection","IntervalList","StatusType","DirectionType","up","down","right","left","OppositeDirectionType","DotType","DirectionTypeDelta","x","y","DirectionKeyCodeMap","37","38","39","40","SnakeStartPosition","Math","round","FieldSize","getRandomNum","min","max","floor","random","setFood","excludes","foodPos","pos","every","item","getFoodPosition","initFields","i","cols","Array","fill","push","snakePos","setSnake","getInitialGameState","position","history","tickId","direction","handleMoving","newPosition","newHistory","slice","isConflict","isEatingMe","newFields","newLength","removingPos","handleKeyPress","App","useState","gameState","setGameState","tick","setTick","timer","setTimer","setDirection","editable","useMemo","canDifficultyUp","canDifficultyDown","useEffect","timerId","setInterval","clearInterval","newState","useCallback","newDirection","document","removeEventListener","e","keyCode","addEventListener","delta","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b93b0fbf.chunk.js","sourcesContent":["import React from 'react'\n\nconst Dot = (props) => <div className={`dots ${props.value}`}></div>\n\nconst Field = (props) => {\n  const { fields } = props\n  return <div className=\"field\">\n    {\n      fields.map((row, rowindex) => {\n      return row.map((col, colIndex) => <Dot\n        key={`${rowindex}-${colIndex}`}\n        value={col}\n          />)\n      })\n    }\n    </div>\n}\n\nexport default Field\n","import React from 'react'\n\nconst Navigation = ({\n  state,\n  canUp,\n  canDown,\n  onChangeDifficulty\n}) => {\n  const { length, difficulty } = state\n\n  const upVisiblity = canUp ? '' : 'is-hidden'\n  const downVisibilty = canDown ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(1)\n  const onDownDifficulty = () => onChangeDifficulty(-1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisiblity}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibilty}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\n\nconst StatusText = {\n  init: 'START',\n  playing: 'STOP',\n  gameover: 'GAME OVER',\n  suspended: 'START'\n}\n\nconst StartButton = ({ status, onStart, onStop, onRestart }) => {\n  const handleClick = () => {\n    const _onClick = {\n      init: onStart,\n      playing: onStop,\n      gameover: onRestart,\n      suspended: onStart,\n    }\n    _onClick[status]()\n  }\n  return <div className=\"button-start\">\n    <button className={`btn btn-${status}`} tabIndex={1} onClick={handleClick}>{StatusText[status]}</button>\n  </div>\n}\n\nexport default StartButton\n","import React from 'react'\n\nconst MoveButton = ({ handleChangeDirection }) => {\n  return (\n    <div className=\"move-button\">\n      <button className=\"btn btn-move btn-left\" onClick={() => handleChangeDirection('left')}>←</button>\n      <div className=\"btn-up-down\">\n        <button className=\"btn btn-move btn-up\" onClick={() => handleChangeDirection('up')}>↑</button>\n        <button className=\"btn btn-move btn-down\" onClick={() => handleChangeDirection('down')}>↓</button>\n      </div>\n      <button className=\"btn btn-move btn-right\" onClick={() => handleChangeDirection('right')}>→</button>\n    </div>\n  )\n}\n\nexport default MoveButton\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport Field from './components/Field'\nimport Navigation from './components/Navigation'\nimport StartButton from './components/StartButton'\nimport MoveButton from './components/MoveButton'\n\nconst FieldSize = 35\nconst DefaultDifficulty = 3\nconst IntervalList = [500, 300, 100, 50, 10]\n\nconst StatusType = {\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n}\n\nconst DirectionType = {\n  up: 'up',\n  down: 'down',\n  right: 'right',\n  left: 'left'\n}\n\nconst OppositeDirectionType = {\n  up: 'down',\n  down: 'up',\n  right: 'left',\n  left: 'right'\n}\n\nconst DotType = {\n  none: '',\n  snake: 'snake',\n  food: 'food'\n}\n\nconst DirectionTypeDelta = {\n  up: ({ x, y }) => ({ x, y: y - 1 }),\n  down: ({ x, y }) => ({ x, y: y + 1 }),\n  right: ({ x, y }) => ({ x: x + 1, y }),\n  left: ({ x, y }) => ({ x: x - 1, y })\n}\n\nconst DirectionKeyCodeMap = {\n  37: DirectionType.left,\n  38: DirectionType.up,\n  39: DirectionType.right,\n  40: DirectionType.down\n}\n\n// へびの初期表示位置をセット\nconst SnakeStartPosition = {\n  x: Math.round(FieldSize / 2) - 1,\n  y: Math.round(FieldSize / 2) - 1\n}\n\nconst getRandomNum = (min, max) => {\n  return Math.floor(Math.random() * (max + 1 - min)) + min\n}\n\nconst getFoodPosition = (excludes) => {\n  while (true) {\n    const pos = {\n      x: getRandomNum(1, FieldSize - 2),\n      y: getRandomNum(1, FieldSize - 2)\n    }\n    const check = excludes.every((item) => pos.x !== item.x || pos.y !== item.y)\n    if (check) {\n      return pos\n    }\n  }\n}\n\nconst setFood = (excludes, fields) => {\n  const foodPos = getFoodPosition(excludes)\n  fields[foodPos.y][foodPos.x] = DotType.food\n  return foodPos\n}\n\nconst setSnake = (fields) => {\n  fields[SnakeStartPosition.y][SnakeStartPosition.x] = DotType.snake\n  return SnakeStartPosition\n}\n\nconst initFields = () => {\n  const fields = []\n  for (let i = 0; i < FieldSize; i++) {\n    const cols = new Array(FieldSize).fill(DotType.none)\n    fields.push(cols)\n  }\n  const snakePos = setSnake(fields)\n  setFood([snakePos], fields)\n  return fields\n}\n\nconst getInitialGameState = () => ({\n  position: SnakeStartPosition,\n  history: [],\n  length: 1,\n  difficulty: DefaultDifficulty,\n  fields: initFields(),\n  tickId: null,\n  status: StatusType.init,\n  direction: DirectionType.up\n})\n\nconst isConflict = (position) =>\n  position.y < 0 ||\n  position.x < 0 ||\n  position.y > FieldSize - 1 ||\n  position.x > FieldSize - 1\n\nconst isEatingMe = (fields, newPosition) => {\n  return fields[newPosition.y][newPosition.x] === DotType.snake\n}\n\nconst handleMoving = (direction, state) => {\n  const { length, history, fields, position } = state\n  const newPosition = DirectionTypeDelta[direction](position)\n  const newHistory = [position, ...history].slice(0, length)\n  if (!isConflict(newPosition) && !isEatingMe(fields, newPosition)) {\n    // ゲーム続行\n    const newFields = [...fields]\n    let newLength = length\n    if (newFields[newPosition.y][newPosition.x] === DotType.food) {\n      setFood([newPosition, ...newHistory], newFields)\n      newLength = length + 1\n    }\n    const removingPos = newHistory.slice(-1)[0]\n    newFields[newPosition.y][newPosition.x] = DotType.snake\n    newFields[removingPos.y][removingPos.x] = DotType.none\n\n    return {\n      ...state,\n      status: StatusType.playing,\n      history: newHistory,\n      length: newLength,\n      position: newPosition,\n      fields: newFields\n    }\n  }\n\n  return {\n    ...state,\n    status: StatusType.gameover,\n    tickId: null\n  }\n}\n\nlet handleKeyPress = null\n\nconst App = () => {\n  const [gameState, setGameState] = useState(getInitialGameState())\n  const [tick, setTick] = useState(0)\n  const [timer, setTimer] = useState()\n  const [direction, setDirection] = useState(DirectionType.up)\n  const { status, fields, difficulty } = gameState\n\n  const editable = useMemo(() => status === StatusType.init, [status])\n  const canDifficultyUp = useMemo(\n    () => difficulty - 1 < IntervalList.length - 1,\n    [difficulty]\n  )\n  const canDifficultyDown = useMemo(() => difficulty - 1 > 0, [difficulty])\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, IntervalList[difficulty - 1])\n    setTimer(timerId)\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [difficulty])\n\n  useEffect(() => {\n    if (gameState.status !== StatusType.playing) {\n      return\n    }\n    const newState = handleMoving(direction, gameState)\n    setGameState(newState)\n  }, [timer, direction, tick, setGameState]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleStart = () => {\n    setGameState((state) => ({\n      ...state,\n      status: StatusType.playing\n    }))\n  }\n\n  const handleRestart = () => {\n    setDirection(DirectionType.up)\n    setGameState(getInitialGameState())\n  }\n\n  const handleStop = () => {\n    setGameState((state) => ({ ...state, status: StatusType.suspended }))\n  }\n\n  const handleChangeDifficulty = (delta) => {\n    if (!editable) {\n      return\n    }\n    setGameState((state) => {\n      if (!IntervalList[state.difficulty - 1 + delta]) {\n        return state\n      }\n      return {\n        ...state,\n        difficulty: state.difficulty + delta\n      }\n    })\n  }\n\n  const handleChangeDirection = useCallback(\n    (newDirection) => {\n      if (\n        !DirectionType[newDirection] ||\n        status !== StatusType.playing ||\n        OppositeDirectionType[direction] === newDirection ||\n        direction === newDirection\n      ) {\n        return\n      }\n      setDirection(newDirection)\n    },\n    [direction, status, setDirection]\n  )\n\n  useEffect(() => {\n    if (handleKeyPress) {\n      document.removeEventListener('keydown', handleKeyPress)\n    }\n    handleKeyPress = (e) => {\n      const direction = DirectionKeyCodeMap[e.keyCode]\n      handleChangeDirection(direction)\n    }\n    document.addEventListener('keydown', handleKeyPress)\n  }, [handleChangeDirection])\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">SNAKE GAME</h1>\n        </div>\n        <Navigation\n          state={gameState}\n          editable={editable}\n          canUp={canDifficultyUp}\n          canDown={canDifficultyDown}\n          onChangeDifficulty={handleChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <StartButton\n          status={status}\n          onStart={handleStart}\n          onRestart={handleRestart}\n          onStop={handleStop}\n        />\n        <MoveButton handleChangeDirection={handleChangeDirection} />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}